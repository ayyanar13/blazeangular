{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../map/map.service\";\nimport * as i2 from \"@agm/core\";\nimport * as i3 from \"@angular/common\";\n\nfunction MapComponent_agm_info_window_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"agm-info-window\", 3);\n    i0.ɵɵtext(1, \"location not found\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"latitude\", 0)(\"longitude\", 0)(\"maxWidth\", 300)(\"isOpen\", true);\n  }\n}\n\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    constructor(mapservice, ref) {\n      this.mapservice = mapservice;\n      this.ref = ref;\n      this.islocation = false;\n      this.lat = 0;\n      this.lng = 0;\n    }\n\n    ngOnInit() {}\n\n    mapreadyhandler() {\n      if (this.location) {\n        this.mapservice.getgeocode(this.location).subscribe(respo => {\n          if (respo.lat) {\n            this.lat = respo.lat;\n            this.lng = respo.lng;\n            this.ref.detectChanges();\n          } else {\n            this.islocation = true;\n          }\n        });\n      }\n    }\n\n  }\n\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.MapService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    inputs: {\n      location: \"location\"\n    },\n    decls: 7,\n    vars: 8,\n    consts: [[3, \"latitude\", \"longitude\", \"mapReady\"], [3, \"latitude\", \"longitude\", \"radius\", \"fillColor\"], [3, \"latitude\", \"longitude\", \"maxWidth\", \"isOpen\", 4, \"ngIf\"], [3, \"latitude\", \"longitude\", \"maxWidth\", \"isOpen\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"map works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"agm-map\", 0);\n        i0.ɵɵlistener(\"mapReady\", function MapComponent_Template_agm_map_mapReady_2_listener() {\n          return ctx.mapreadyhandler();\n        });\n        i0.ɵɵelement(3, \"agm-circle\", 1);\n        i0.ɵɵtemplate(4, MapComponent_agm_info_window_4_Template, 2, 4, \"agm-info-window\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h1\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"latitude\", ctx.lat)(\"longitude\", ctx.lng);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"latitude\", ctx.lat)(\"longitude\", ctx.lng)(\"radius\", 10000)(\"fillColor\", \"#f44336\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.islocation);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.location);\n      }\n    },\n    directives: [i2.AgmMap, i2.AgmCircle, i3.NgIf, i2.AgmInfoWindow],\n    styles: [\"agm-map[_ngcontent-%COMP%]{height:300px}\"]\n  });\n  return MapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}